{"name":"Gradle Save SSD Plugin","tagline":"Gradle plugin that helps to save your SSD write cycles by linking project build directory into /tmp on *nix.","body":"SaveSSD plugin for Gradle\r\n=========================\r\n\r\nGradle plugin that helps to save your SSD write cycles by linking project build directory into /tmp on *nix.\r\n\r\nHow it works\r\n------------\r\nIt works on nix systems (Linux, BSD, Mac), assuming, that your */tmp* directory is mounted as *tmpfs* and resides in computer's RAM (on Windows it just does nothing).\r\nBefore project build **SaveSSD** checks, if *project.buildDir* directory exists in project. If it exists and not empty, it does nothing, else creates */tmp/gradle/your-project-path* dir and creates *project.buildDir* symlink to it. So, your project structure remanes same as before, but temporary files, that are often rewritten, are kept in memory.\r\n\r\nPlugin can be enabled or disabled through project properties (in *gradle.properties* file), so different team members can enable or disable it individually. By default it does nothing until you set *saveSSD=true*.\r\n\r\n### Pros ###\r\n+ Extend SSD lifetime by reducing number of writes to it\r\n+ Speeds up build of small projects, because build files are kept in memory, so it can be usefull for HDD owners too\r\n\r\n### Cons ###\r\n- Your project */build* dir contents will be lost on system reboot, relogin, etc.\r\n- Increased memory usage\r\n\r\nHow to use\r\n-----\r\n1. **gradle.build**\r\n\r\n    ```groovy\r\n    buildscript {\r\n        repositories {\r\n            maven {\r\n                url 'http://dl.bintray.com/haunted-soft/maven'\r\n            }\r\n        }\r\n        dependencies {\r\n            classpath 'com.haunted.gradle-plugins:save-ssd:+@jar'\r\n        }\r\n    }\r\n    apply plugin:'save-ssd'\r\n    ```\r\n    \r\n2.  **gradle.properties**\r\n    \r\n    ```\r\n    saveSSD = true\r\n    ```\r\n\r\n3.  Perform *clean* task or delete */build* directory manually, than perform build (or other tasks) in your project as usual.\r\n \r\n    ```shell\r\n    gradle clean\r\n    gradle build\r\n    ```\r\n\r\n    You also can run *saveSsd* task manually - it will run ignoring *saveSSD=true* check but it will do nothing while */build* directory exists and not empty.\r\n\r\nExample\r\n-------\r\nYou can see a live code sample at [Android MarketBin](https://github.com/populov/Android-MarketBin/tree/master/sample) project.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}